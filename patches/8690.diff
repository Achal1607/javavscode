diff --git a/java/java.file.launcher/src/org/netbeans/modules/java/file/launcher/actions/SingleJavaSourceRunActionProvider.java b/java/java.file.launcher/src/org/netbeans/modules/java/file/launcher/actions/SingleJavaSourceRunActionProvider.java
index 05c9d1ff1ccd..c279d6d7b868 100644
--- a/java/java.file.launcher/src/org/netbeans/modules/java/file/launcher/actions/SingleJavaSourceRunActionProvider.java
+++ b/java/java.file.launcher/src/org/netbeans/modules/java/file/launcher/actions/SingleJavaSourceRunActionProvider.java
@@ -19,6 +19,7 @@
 package org.netbeans.modules.java.file.launcher.actions;
 
 import java.nio.charset.Charset;
+import java.util.Locale;
 import java.util.Map;
 import java.util.WeakHashMap;
 import java.util.concurrent.Future;
@@ -55,6 +56,19 @@ public String[] getSupportedActions() {
         };
     }
 
+    private String getTaskName(String command, String fileName){
+        if(command == null || command.isEmpty()) return fileName;
+        String action = command.contains(".")
+                ? command.substring(0, command.indexOf('.'))
+                : command;
+        String capitalized = action.substring(0, 1).toUpperCase(Locale.ROOT)
+                + action.substring(1).toLowerCase(Locale.ROOT);
+        String baseName = fileName.contains(".")
+                ? fileName.substring(0, fileName.lastIndexOf('.'))
+                : fileName;
+        return String.format("%s (%s)", capitalized, baseName);
+    }
+
     @NbBundle.Messages({
         "CTL_SingleJavaFile=Running Single Java File"
     })
@@ -91,7 +105,7 @@ public void invokeAction(String command, Lookup context) throws IllegalArgumentE
         LaunchProcess process = invokeActionHelper(command, fileObject, params);
         ExecutionService exeService = ExecutionService.newService(
                     process,
-                    descriptor, fileObject.getNameExt());
+                    descriptor, this.getTaskName(command, fileObject.getNameExt()));
 
         Future<Integer> future = exeService.run();
         if (NbPreferences.forModule(JavaPlatformManager.class).getBoolean(SingleSourceFileUtil.GLOBAL_STOP_AND_RUN_OPTION, false)) {
