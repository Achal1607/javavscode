--- a/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java
+++ b/java/java.lsp.server/src/org/netbeans/modules/java/lsp/server/protocol/TextDocumentServiceImpl.java
@@ -19,6 +19,7 @@
 package org.netbeans.modules.java.lsp.server.protocol;
 
 import com.google.gson.Gson;
+import com.google.gson.JsonArray;
 import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonPrimitive;
@@ -292,6 +293,8 @@
     private static final String NETBEANS_JAVADOC_LOAD_TIMEOUT = "javadoc.load.timeout";// NOI18N
     private static final String NETBEANS_COMPLETION_WARNING_TIME = "completion.warning.time";// NOI18N
     private static final String NETBEANS_JAVA_ON_SAVE_ORGANIZE_IMPORTS = "java.onSave.organizeImports";// NOI18N
+    private static final String NETBEANS_CODE_COMPLETION_COMMIT_CHARS = "java.completion.commit.chars";// NOI18N
+
     private static final String URL = "url";// NOI18N
     private static final String INDEX = "index";// NOI18N
     
@@ -368,6 +371,7 @@
         AtomicReference<Sampler> samplerRef = new AtomicReference<>();
         AtomicLong samplingStart = new AtomicLong();
         AtomicLong samplingWarningLength = new AtomicLong(DEFAULT_COMPLETION_WARNING_LENGTH);
+        AtomicReference<List<String>> codeCompletionCommitChars = new AtomicReference<>(List.of());
         long completionStart = System.currentTimeMillis();
         COMPLETION_SAMPLER_WORKER.post(() -> {
             if (!done.get()) {
@@ -412,7 +416,10 @@
             ConfigurationItem completionWarningLength = new ConfigurationItem();
             completionWarningLength.setScopeUri(uri);
             completionWarningLength.setSection(client.getNbCodeCapabilities().getConfigurationPrefix() + NETBEANS_COMPLETION_WARNING_TIME);
-            return client.configuration(new ConfigurationParams(Arrays.asList(conf, completionWarningLength))).thenApply(c -> {
+            ConfigurationItem commitCharacterConfig = new ConfigurationItem();
+            commitCharacterConfig.setScopeUri(uri);
+            commitCharacterConfig.setSection(client.getNbCodeCapabilities().getConfigurationPrefix() + NETBEANS_CODE_COMPLETION_COMMIT_CHARS);
+            return client.configuration(new ConfigurationParams(Arrays.asList(conf, completionWarningLength, commitCharacterConfig))).thenApply(c -> {
                 if (c != null && !c.isEmpty()) {
                     if (c.get(0) instanceof JsonPrimitive) {
                         JsonPrimitive javadocTimeSetting = (JsonPrimitive) c.get(0);
@@ -424,7 +431,11 @@
 
                         samplingWarningLength.set(samplingWarningsLengthSetting.getAsLong());
                     }
+                    if(c.get(2) instanceof JsonArray){
+                        JsonArray commitCharsJsonArray = (JsonArray) c.get(2);
+                        codeCompletionCommitChars.set(commitCharsJsonArray.asList().stream().map(ch -> ch.toString()).collect(Collectors.toList()));
                 }
+                }
                 final int caret = Utils.getOffset(doc, params.getPosition());
                 List<CompletionItem> items = new ArrayList<>();
                 Completion.Context context = params.getContext() != null
@@ -486,8 +497,8 @@
                                 }).collect(Collectors.toList()));
                             }
                         }
-                        if (completion.getCommitCharacters() != null) {
-                            item.setCommitCharacters(completion.getCommitCharacters().stream().map(ch -> ch.toString()).collect(Collectors.toList()));
+                        if (codeCompletionCommitChars.get() != null) {
+                            item.setCommitCharacters(codeCompletionCommitChars.get());
                         }
                         lastCompletions.add(completion);
                         item.setData(new CompletionData(uri, index.getAndIncrement()));
